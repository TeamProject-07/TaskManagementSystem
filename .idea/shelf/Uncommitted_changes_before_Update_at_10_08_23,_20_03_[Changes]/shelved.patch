Index: src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.management.oop.project.core;\n\nimport com.management.oop.project.core.contracts.TaskManagementSystemRepository;\nimport com.management.oop.project.models.BoardImpl;\nimport com.management.oop.project.models.PersonImpl;\nimport com.management.oop.project.models.TeamImpl;\nimport com.management.oop.project.models.contracts.*;\nimport com.management.oop.project.models.enums.*;\nimport com.management.oop.project.models.tasks.BugImpl;\nimport com.management.oop.project.models.tasks.FeedbackImpl;\nimport com.management.oop.project.models.tasks.StoryImpl;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class TaskManagementSystemRepositoryImpl implements TaskManagementSystemRepository {\n    public static final String PERSON_NOT_FOUND = \"Person not found\";\n    public static final String TEAM_NOT_FOUND = \"Team not found.\";\n    private int nextId;\n    private final List<Team> teams;\n    private final List<Person> people;\n    private final List<Task> tasks;\n    private final List<Board> boards;\n\n\n    public TaskManagementSystemRepositoryImpl() {\n        this.teams = new ArrayList<>();\n        this.people = new ArrayList<>();\n        this.tasks = new ArrayList<>();\n        this.boards = new ArrayList<>();\n        nextId = 0;\n    }\n\n    @Override\n    public boolean personExist(String personName) {\n        boolean exists = false;\n        for (Person person : people) {\n            if (person.getName().equalsIgnoreCase(personName)) {\n                exists = true;\n                break;\n            }\n        }\n        return exists;\n    }\n\n    @Override\n    public boolean personHasTeam(String personName) {\n        boolean exists = false;\n        for (Team team : teams) {\n            for (Person person : team.getPeople()) {\n                if (person.getName().equalsIgnoreCase(personName)) {\n                    exists = true;\n                    break;\n                }\n            }\n        }\n        return exists;\n    }\n\n    @Override\n    public Person findPersonByName(String personName) {\n        for (Person person : people) {\n            if (person.getName().equalsIgnoreCase(personName)) {\n                return person;\n            }\n        }\n        throw new IllegalArgumentException(PERSON_NOT_FOUND);\n    }\n\n    @Override\n    public Task findTaskById(int id) {\n        for (Task task : tasks) {\n            if (task.getId() == id) {\n                return task;\n            }\n        }\n        throw new IllegalArgumentException(\"There is no task with this ID.\");\n    }\n    public Board findBoardByName(String boardName){\n        for (Board board : boards) {\n            if (board.getName().equalsIgnoreCase(boardName)){\n                return board;\n            }\n        }\n        throw new IllegalArgumentException(\"There is no board with this name.\");\n    }\n\n    @Override\n    public List<Team> getTeams() {\n        return new ArrayList<>(teams);\n    }\n\n    @Override\n    public List<Person> getPeople() {\n        return new ArrayList<>(people);\n    }\n\n    @Override\n    public List<Task> getTasks() {\n        return new ArrayList<>(tasks);\n    }\n\n    @Override\n    public Team findTeamByName(String teamName) {\n        for (Team team : teams) {\n            if (team.getName().equalsIgnoreCase(teamName)) {\n                return team;\n            }\n        }\n        throw new IllegalArgumentException(TEAM_NOT_FOUND);\n    }\n\n    @Override\n    public boolean boardExist(String boardName) {\n        for (Board board : boards) {\n            if (board.getName().equalsIgnoreCase(boardName)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @Override\n    public boolean teamExist(String teamName) {\n        for (Team team : teams) {\n            if (team.getName().equalsIgnoreCase(teamName)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @Override\n    public boolean taskExist(int id) {\n        for (Task task : tasks) {\n            if (task.getId() == id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @Override\n    public Person createPerson(String name) {\n        Person person = new PersonImpl(name);\n        this.people.add(person);\n        return person;\n    }\n\n    @Override\n    public void addPersonToTeam(Person person, Team team) {\n        team.getPeople().add(person);\n    }\n\n    @Override\n    public Board createBoard(String boardName) {\n        Board board = new BoardImpl(boardName);\n        this.boards.add(board);\n        return board;\n    }\n\n    @Override\n    public Bug createBug(String title, String description, List<String> steps, PriorityEnum priorityEnum,\n                         BugSeverityEnum bugSeverityEnum, BugStatusEnum bugStatusEnum) {\n        Bug bug = new BugImpl(++nextId, title, description, steps, priorityEnum, bugSeverityEnum, bugStatusEnum);\n        this.tasks.add(bug);\n        return bug;\n    }\n\n    @Override\n    public Story createStory(String title, String description, PriorityEnum priorityEnum, StorySizeEnum storySizeEnum,\n                             StoryStatusEnum storyStatusEnum) {\n        Story story = new StoryImpl(++nextId, title, description, priorityEnum, storySizeEnum, storyStatusEnum);\n        this.tasks.add(story);\n        return story;\n    }\n\n\n    @Override\n    public Feedback createFeedback(String title, String description, int rating, FeedbackStatusEnum feedbackStatusEnum) {\n        Feedback feedback = new FeedbackImpl(++nextId, title, description, rating, feedbackStatusEnum);\n        this.tasks.add(feedback);\n        return feedback;\n    }\n\n    @Override\n    public Team createTeam(String teamName) {\n        Team team = new TeamImpl(teamName);\n        this.teams.add(team);\n        return team;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java b/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java
--- a/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java	(revision 611123550f5e7fe9774a759a3a63a25f894c729b)
+++ b/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java	(date 1691687511464)
@@ -152,6 +152,7 @@
         team.getPeople().add(person);
     }
 
+
     @Override
     public Board createBoard(String boardName) {
         Board board = new BoardImpl(boardName);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f4d32bab-62d7-485a-a9dd-6cb272e43dff\" name=\"Changes\" comment=\"Commit ShowBoardActivityCommand\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/commands/change/ChangePriorityOfBugCommand.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/commands/change/ChangePriorityOfBugCommand.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/commands/create/CreateNewStory.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/commands/create/CreateNewStory.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/core/CommandFactoryImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/core/CommandFactoryImpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/core/contracts/TaskManagementSystemRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/core/contracts/TaskManagementSystemRepository.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/models/contracts/Story.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/models/contracts/Story.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/models/enums/PriorityEnum.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/models/enums/PriorityEnum.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/models/tasks/StoryImpl.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/models/tasks/StoryImpl.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/management/oop/project/utils/ParsingHelpers.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/management/oop/project/utils/ParsingHelpers.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n        <option value=\"Interface\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2TWYpfP1bhVE3fi67gUH8HWDEr9\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/mitko/Desktop/TaskManagementSystem/src/Main.java&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Application.Startup\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"TaskManagementSystem\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Startup\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Startup\" />\n      <module name=\"TaskManagementSystem\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Startup\" />\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f4d32bab-62d7-485a-a9dd-6cb272e43dff\" name=\"Changes\" comment=\"\" />\n      <created>1691160491848</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1691160491848</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initial Commit\">\n      <created>1691160687240</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691160687240</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added additional libraries\">\n      <created>1691160875884</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691160875884</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added additional .gitignore\">\n      <created>1691160944488</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691160944488</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Add and implement Engine and CommandFactory\">\n      <created>1691505761519</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691505761519</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Implement TaskBase and subclasses\">\n      <created>1691576602875</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691576602875</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Commit ShowBoardActivityCommand\">\n      <created>1691654141757</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1691654141757</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"7\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT\" value=\"false\" />\n    <option name=\"CHECK_NEW_TODO\" value=\"false\" />\n    <MESSAGE value=\"Initial Commit\" />\n    <MESSAGE value=\"Added additional libraries\" />\n    <MESSAGE value=\"Added additional .gitignore\" />\n    <MESSAGE value=\"Add and implement Engine and CommandFactory\" />\n    <MESSAGE value=\"Implement TaskBase and subclasses\" />\n    <MESSAGE value=\"Commit ShowBoardActivityCommand\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Commit ShowBoardActivityCommand\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 611123550f5e7fe9774a759a3a63a25f894c729b)
+++ b/.idea/workspace.xml	(date 1691687511467)
@@ -6,15 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="f4d32bab-62d7-485a-a9dd-6cb272e43dff" name="Changes" comment="Commit ShowBoardActivityCommand">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/commands/change/ChangePriorityOfBugCommand.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/commands/change/ChangePriorityOfBugCommand.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/commands/create/CreateNewStory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/commands/create/CreateNewStory.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/core/CommandFactoryImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/core/CommandFactoryImpl.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/core/TaskManagementSystemRepositoryImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/core/contracts/TaskManagementSystemRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/core/contracts/TaskManagementSystemRepository.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/models/contracts/Story.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/models/contracts/Story.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/models/enums/PriorityEnum.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/models/enums/PriorityEnum.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/models/tasks/StoryImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/models/tasks/StoryImpl.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/management/oop/project/utils/ParsingHelpers.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/management/oop/project/utils/ParsingHelpers.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
